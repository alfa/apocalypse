# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2004 WoW Daemon
# Copyright (C) 2005 MaNGOS <https://opensvn.csie.org/traccgi/MaNGOS/trac.cgi/>
#
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@

INCLUDES = @INCLUDES@ -I$(srcdir) -I$(srcdir)/../../dep/include -I$(srcdir)/../game -I$(srcdir)/../realmlist
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

noinst_LIBRARIES = libshared.a libauth.a libconfig.a libdatabase.a libnetwork.a

libshared_a_SOURCES = \
    Log.cpp \
    MemoryLeaks.cpp \
    ByteBuffer.h \
    Common.h \
    Errors.h \
    Log.h \
    MemoryLeaks.h \
    Singleton.h \
    Timer.h \
    Util.h \
    Util.cpp \
    WorldPacket.h


libauth_a_SOURCES = \
    Auth/BigNumber.cpp \
    Auth/BigNumber.h \
    Auth/Sha1.cpp \
    Auth/Sha1.h \
    Auth/AuthCrypt.cpp \
    Auth/AuthCrypt.h


libconfig_a_SOURCES = \
    Config/Config.cpp \
    Config/Config.h \
    Config/ConfigEnv.h \
    Config/dotconfpp/dotconfpp.cpp \
    Config/dotconfpp/dotconfpp.h \
    Config/dotconfpp/mempool.cpp \
    Config/dotconfpp/mempool.h \
    Config/dotconfpp


libdatabase_a_SOURCES = \
    Database/DBC.cpp \
    Database/Database.cpp \
    Database/DatabaseSqlite.cpp \
    Database/QueryResultMysql.cpp \
    Database/DBC.h \
    Database/Database.h \
    Database/DatabaseSqlite.h \
    Database/QueryResultMysql.h \
    Database/DBCStores.cpp \
    Database/DatabaseEnv.h \
    Database/Field.cpp \
    Database/QueryResultSqlite.cpp \
    Database/DBCStores.h \
    Database/DatabaseMysql.cpp \
    Database/Field.h \
    Database/QueryResultSqlite.h \
    Database/DataStore.h \
    Database/DatabaseMysql.h \
    Database/QueryResult.h 


libnetwork_a_SOURCES = \
    Network/Base64.cpp \
    Network/Base64.h \
    Network/CircularBuffer.cpp \
    Network/CircularBuffer.h \
    Network/ListenSocket.h \
    Network/Parse.cpp \
    Network/Parse.h \
    Network/PoolSocket.cpp \
    Network/PoolSocket.h \
    Network/ResolvServer.cpp \
    Network/ResolvServer.h \
    Network/ResolvSocket.cpp \
    Network/ResolvSocket.h \
    Network/Socket.cpp \
    Network/Socket.h \
    Network/SocketHandler.cpp \
    Network/SocketHandler.h \
    Network/socket_include.cpp \
    Network/socket_include.h \
    Network/SocketThread.cpp \
    Network/SocketThread.h \
    Network/StdLog.h \
    Network/StdoutLog.cpp \
    Network/StdoutLog.h \
    Network/TcpSocket.cpp \
    Network/TcpSocket.h \
    Network/Thread.cpp \
    Network/Thread.h \
    Network/UdpSocket.cpp \
    Network/UdpSocket.h \
    Network/Utility.cpp \
    Network/Utility.h

subdir = src/shared
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libauth_a_AR = $(AR) cru
libauth_a_LIBADD =
am_libauth_a_OBJECTS = BigNumber.$(OBJEXT) Sha1.$(OBJEXT) \
	AuthCrypt.$(OBJEXT)
libauth_a_OBJECTS = $(am_libauth_a_OBJECTS)
libconfig_a_AR = $(AR) cru
libconfig_a_LIBADD =
am_libconfig_a_OBJECTS = Config.$(OBJEXT) dotconfpp.$(OBJEXT) \
	mempool.$(OBJEXT)
libconfig_a_OBJECTS = $(am_libconfig_a_OBJECTS)
libdatabase_a_AR = $(AR) cru
libdatabase_a_LIBADD =
am_libdatabase_a_OBJECTS = DBC.$(OBJEXT) Database.$(OBJEXT) \
	DatabaseSqlite.$(OBJEXT) QueryResultMysql.$(OBJEXT) \
	DBCStores.$(OBJEXT) Field.$(OBJEXT) QueryResultSqlite.$(OBJEXT) \
	DatabaseMysql.$(OBJEXT)
libdatabase_a_OBJECTS = $(am_libdatabase_a_OBJECTS)
libnetwork_a_AR = $(AR) cru
libnetwork_a_LIBADD =
am_libnetwork_a_OBJECTS = Base64.$(OBJEXT) CircularBuffer.$(OBJEXT) \
	Parse.$(OBJEXT) PoolSocket.$(OBJEXT) ResolvServer.$(OBJEXT) \
	ResolvSocket.$(OBJEXT) Socket.$(OBJEXT) SocketHandler.$(OBJEXT) \
	socket_include.$(OBJEXT) SocketThread.$(OBJEXT) \
	StdoutLog.$(OBJEXT) TcpSocket.$(OBJEXT) Thread.$(OBJEXT) \
	UdpSocket.$(OBJEXT) Utility.$(OBJEXT)
libnetwork_a_OBJECTS = $(am_libnetwork_a_OBJECTS)
libshared_a_AR = $(AR) cru
libshared_a_LIBADD =
am_libshared_a_OBJECTS = Log.$(OBJEXT) MemoryLeaks.$(OBJEXT) \
	Util.$(OBJEXT)
libshared_a_OBJECTS = $(am_libshared_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Base64.Po ./$(DEPDIR)/BigNumber.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CircularBuffer.Po ./$(DEPDIR)/Config.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DBC.Po ./$(DEPDIR)/DBCStores.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Database.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DatabaseMysql.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DatabaseSqlite.Po ./$(DEPDIR)/Field.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Log.Po ./$(DEPDIR)/MemoryLeaks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Parse.Po ./$(DEPDIR)/PoolSocket.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QueryResultMysql.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QueryResultSqlite.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ResolvServer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ResolvSocket.Po ./$(DEPDIR)/Sha1.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Socket.Po ./$(DEPDIR)/SocketHandler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SocketThread.Po \
@AMDEP_TRUE@	./$(DEPDIR)/StdoutLog.Po ./$(DEPDIR)/TcpSocket.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Thread.Po ./$(DEPDIR)/UdpSocket.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Util.Po ./$(DEPDIR)/Utility.Po \
@AMDEP_TRUE@	./$(DEPDIR)/AuthCrypt.Po ./$(DEPDIR)/dotconfpp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mempool.Po \
@AMDEP_TRUE@	./$(DEPDIR)/socket_include.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libauth_a_SOURCES) $(libconfig_a_SOURCES) \
	$(libdatabase_a_SOURCES) $(libnetwork_a_SOURCES) \
	$(libshared_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libauth_a_SOURCES) $(libconfig_a_SOURCES) $(libdatabase_a_SOURCES) $(libnetwork_a_SOURCES) $(libshared_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/shared/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
BigNumber.$(OBJEXT): Auth/BigNumber.cpp
Sha1.$(OBJEXT): Auth/Sha1.cpp
AuthCrypt.$(OBJEXT): Auth/AuthCrypt.cpp
libauth.a: $(libauth_a_OBJECTS) $(libauth_a_DEPENDENCIES) 
	-rm -f libauth.a
	$(libauth_a_AR) libauth.a $(libauth_a_OBJECTS) $(libauth_a_LIBADD)
	$(RANLIB) libauth.a
Config.$(OBJEXT): Config/Config.cpp
dotconfpp.$(OBJEXT): Config/dotconfpp/dotconfpp.cpp
mempool.$(OBJEXT): Config/dotconfpp/mempool.cpp
libconfig.a: $(libconfig_a_OBJECTS) $(libconfig_a_DEPENDENCIES) 
	-rm -f libconfig.a
	$(libconfig_a_AR) libconfig.a $(libconfig_a_OBJECTS) $(libconfig_a_LIBADD)
	$(RANLIB) libconfig.a
DBC.$(OBJEXT): Database/DBC.cpp
Database.$(OBJEXT): Database/Database.cpp
DatabaseSqlite.$(OBJEXT): Database/DatabaseSqlite.cpp
QueryResultMysql.$(OBJEXT): Database/QueryResultMysql.cpp
DBCStores.$(OBJEXT): Database/DBCStores.cpp
Field.$(OBJEXT): Database/Field.cpp
QueryResultSqlite.$(OBJEXT): Database/QueryResultSqlite.cpp
DatabaseMysql.$(OBJEXT): Database/DatabaseMysql.cpp
libdatabase.a: $(libdatabase_a_OBJECTS) $(libdatabase_a_DEPENDENCIES) 
	-rm -f libdatabase.a
	$(libdatabase_a_AR) libdatabase.a $(libdatabase_a_OBJECTS) $(libdatabase_a_LIBADD)
	$(RANLIB) libdatabase.a
Base64.$(OBJEXT): Network/Base64.cpp
CircularBuffer.$(OBJEXT): Network/CircularBuffer.cpp
Parse.$(OBJEXT): Network/Parse.cpp
PoolSocket.$(OBJEXT): Network/PoolSocket.cpp
ResolvServer.$(OBJEXT): Network/ResolvServer.cpp
ResolvSocket.$(OBJEXT): Network/ResolvSocket.cpp
Socket.$(OBJEXT): Network/Socket.cpp
SocketHandler.$(OBJEXT): Network/SocketHandler.cpp
socket_include.$(OBJEXT): Network/socket_include.cpp
SocketThread.$(OBJEXT): Network/SocketThread.cpp
StdoutLog.$(OBJEXT): Network/StdoutLog.cpp
TcpSocket.$(OBJEXT): Network/TcpSocket.cpp
Thread.$(OBJEXT): Network/Thread.cpp
UdpSocket.$(OBJEXT): Network/UdpSocket.cpp
Utility.$(OBJEXT): Network/Utility.cpp
libnetwork.a: $(libnetwork_a_OBJECTS) $(libnetwork_a_DEPENDENCIES) 
	-rm -f libnetwork.a
	$(libnetwork_a_AR) libnetwork.a $(libnetwork_a_OBJECTS) $(libnetwork_a_LIBADD)
	$(RANLIB) libnetwork.a
libshared.a: $(libshared_a_OBJECTS) $(libshared_a_DEPENDENCIES) 
	-rm -f libshared.a
	$(libshared_a_AR) libshared.a $(libshared_a_OBJECTS) $(libshared_a_LIBADD)
	$(RANLIB) libshared.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BigNumber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CircularBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DBC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DBCStores.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Database.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DatabaseMysql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DatabaseSqlite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MemoryLeaks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PoolSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueryResultMysql.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueryResultSqlite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ResolvServer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ResolvSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sha1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SocketHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SocketThread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StdoutLog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TcpSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UdpSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Utility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AuthCrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dotconfpp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mempool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket_include.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

BigNumber.o: Auth/BigNumber.cpp
@AMDEP_TRUE@	source='Auth/BigNumber.cpp' object='BigNumber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BigNumber.Po' tmpdepfile='$(DEPDIR)/BigNumber.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BigNumber.o `test -f 'Auth/BigNumber.cpp' || echo '$(srcdir)/'`Auth/BigNumber.cpp

BigNumber.obj: Auth/BigNumber.cpp
@AMDEP_TRUE@	source='Auth/BigNumber.cpp' object='BigNumber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BigNumber.Po' tmpdepfile='$(DEPDIR)/BigNumber.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BigNumber.obj `cygpath -w Auth/BigNumber.cpp`

Sha1.o: Auth/Sha1.cpp
@AMDEP_TRUE@	source='Auth/Sha1.cpp' object='Sha1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Sha1.Po' tmpdepfile='$(DEPDIR)/Sha1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sha1.o `test -f 'Auth/Sha1.cpp' || echo '$(srcdir)/'`Auth/Sha1.cpp

Sha1.obj: Auth/Sha1.cpp
@AMDEP_TRUE@	source='Auth/Sha1.cpp' object='Sha1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Sha1.Po' tmpdepfile='$(DEPDIR)/Sha1.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sha1.obj `cygpath -w Auth/Sha1.cpp`

AuthCrypt.o: Auth/AuthCrypt.cpp
@AMDEP_TRUE@	source='Auth/AuthCrypt.cpp' object='AuthCrypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AuthCrypt.Po' tmpdepfile='$(DEPDIR)/AuthCrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AuthCrypt.o `test -f 'Auth/AuthCrypt.cpp' || echo '$(srcdir)/'`Auth/AuthCrypt.cpp

AuthCrypt.obj: Auth/AuthCrypt.cpp
@AMDEP_TRUE@	source='Auth/AuthCrypt.cpp' object='AuthCrypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AuthCrypt.Po' tmpdepfile='$(DEPDIR)/AuthCrypt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AuthCrypt.obj `cygpath -w Auth/AuthCrypt.cpp`

Config.o: Config/Config.cpp
@AMDEP_TRUE@	source='Config/Config.cpp' object='Config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Config.Po' tmpdepfile='$(DEPDIR)/Config.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.o `test -f 'Config/Config.cpp' || echo '$(srcdir)/'`Config/Config.cpp

Config.obj: Config/Config.cpp
@AMDEP_TRUE@	source='Config/Config.cpp' object='Config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Config.Po' tmpdepfile='$(DEPDIR)/Config.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.obj `cygpath -w Config/Config.cpp`

dotconfpp.o: Config/dotconfpp/dotconfpp.cpp
@AMDEP_TRUE@	source='Config/dotconfpp/dotconfpp.cpp' object='dotconfpp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/dotconfpp.Po' tmpdepfile='$(DEPDIR)/dotconfpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dotconfpp.o `test -f 'Config/dotconfpp/dotconfpp.cpp' || echo '$(srcdir)/'`Config/dotconfpp/dotconfpp.cpp

dotconfpp.obj: Config/dotconfpp/dotconfpp.cpp
@AMDEP_TRUE@	source='Config/dotconfpp/dotconfpp.cpp' object='dotconfpp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/dotconfpp.Po' tmpdepfile='$(DEPDIR)/dotconfpp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dotconfpp.obj `cygpath -w Config/dotconfpp/dotconfpp.cpp`

mempool.o: Config/dotconfpp/mempool.cpp
@AMDEP_TRUE@	source='Config/dotconfpp/mempool.cpp' object='mempool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mempool.Po' tmpdepfile='$(DEPDIR)/mempool.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mempool.o `test -f 'Config/dotconfpp/mempool.cpp' || echo '$(srcdir)/'`Config/dotconfpp/mempool.cpp

mempool.obj: Config/dotconfpp/mempool.cpp
@AMDEP_TRUE@	source='Config/dotconfpp/mempool.cpp' object='mempool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mempool.Po' tmpdepfile='$(DEPDIR)/mempool.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mempool.obj `cygpath -w Config/dotconfpp/mempool.cpp`

DBC.o: Database/DBC.cpp
@AMDEP_TRUE@	source='Database/DBC.cpp' object='DBC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DBC.Po' tmpdepfile='$(DEPDIR)/DBC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DBC.o `test -f 'Database/DBC.cpp' || echo '$(srcdir)/'`Database/DBC.cpp

DBC.obj: Database/DBC.cpp
@AMDEP_TRUE@	source='Database/DBC.cpp' object='DBC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DBC.Po' tmpdepfile='$(DEPDIR)/DBC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DBC.obj `cygpath -w Database/DBC.cpp`

Database.o: Database/Database.cpp
@AMDEP_TRUE@	source='Database/Database.cpp' object='Database.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Database.Po' tmpdepfile='$(DEPDIR)/Database.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Database.o `test -f 'Database/Database.cpp' || echo '$(srcdir)/'`Database/Database.cpp

Database.obj: Database/Database.cpp
@AMDEP_TRUE@	source='Database/Database.cpp' object='Database.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Database.Po' tmpdepfile='$(DEPDIR)/Database.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Database.obj `cygpath -w Database/Database.cpp`

DatabaseSqlite.o: Database/DatabaseSqlite.cpp
@AMDEP_TRUE@	source='Database/DatabaseSqlite.cpp' object='DatabaseSqlite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DatabaseSqlite.Po' tmpdepfile='$(DEPDIR)/DatabaseSqlite.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DatabaseSqlite.o `test -f 'Database/DatabaseSqlite.cpp' || echo '$(srcdir)/'`Database/DatabaseSqlite.cpp

DatabaseSqlite.obj: Database/DatabaseSqlite.cpp
@AMDEP_TRUE@	source='Database/DatabaseSqlite.cpp' object='DatabaseSqlite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DatabaseSqlite.Po' tmpdepfile='$(DEPDIR)/DatabaseSqlite.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DatabaseSqlite.obj `cygpath -w Database/DatabaseSqlite.cpp`

QueryResultMysql.o: Database/QueryResultMysql.cpp
@AMDEP_TRUE@	source='Database/QueryResultMysql.cpp' object='QueryResultMysql.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryResultMysql.Po' tmpdepfile='$(DEPDIR)/QueryResultMysql.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryResultMysql.o `test -f 'Database/QueryResultMysql.cpp' || echo '$(srcdir)/'`Database/QueryResultMysql.cpp

QueryResultMysql.obj: Database/QueryResultMysql.cpp
@AMDEP_TRUE@	source='Database/QueryResultMysql.cpp' object='QueryResultMysql.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryResultMysql.Po' tmpdepfile='$(DEPDIR)/QueryResultMysql.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryResultMysql.obj `cygpath -w Database/QueryResultMysql.cpp`

DBCStores.o: Database/DBCStores.cpp
@AMDEP_TRUE@	source='Database/DBCStores.cpp' object='DBCStores.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DBCStores.Po' tmpdepfile='$(DEPDIR)/DBCStores.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DBCStores.o `test -f 'Database/DBCStores.cpp' || echo '$(srcdir)/'`Database/DBCStores.cpp

DBCStores.obj: Database/DBCStores.cpp
@AMDEP_TRUE@	source='Database/DBCStores.cpp' object='DBCStores.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DBCStores.Po' tmpdepfile='$(DEPDIR)/DBCStores.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DBCStores.obj `cygpath -w Database/DBCStores.cpp`

Field.o: Database/Field.cpp
@AMDEP_TRUE@	source='Database/Field.cpp' object='Field.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Field.Po' tmpdepfile='$(DEPDIR)/Field.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Field.o `test -f 'Database/Field.cpp' || echo '$(srcdir)/'`Database/Field.cpp

Field.obj: Database/Field.cpp
@AMDEP_TRUE@	source='Database/Field.cpp' object='Field.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Field.Po' tmpdepfile='$(DEPDIR)/Field.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Field.obj `cygpath -w Database/Field.cpp`

QueryResultSqlite.o: Database/QueryResultSqlite.cpp
@AMDEP_TRUE@	source='Database/QueryResultSqlite.cpp' object='QueryResultSqlite.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryResultSqlite.Po' tmpdepfile='$(DEPDIR)/QueryResultSqlite.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryResultSqlite.o `test -f 'Database/QueryResultSqlite.cpp' || echo '$(srcdir)/'`Database/QueryResultSqlite.cpp

QueryResultSqlite.obj: Database/QueryResultSqlite.cpp
@AMDEP_TRUE@	source='Database/QueryResultSqlite.cpp' object='QueryResultSqlite.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryResultSqlite.Po' tmpdepfile='$(DEPDIR)/QueryResultSqlite.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryResultSqlite.obj `cygpath -w Database/QueryResultSqlite.cpp`

DatabaseMysql.o: Database/DatabaseMysql.cpp
@AMDEP_TRUE@	source='Database/DatabaseMysql.cpp' object='DatabaseMysql.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DatabaseMysql.Po' tmpdepfile='$(DEPDIR)/DatabaseMysql.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DatabaseMysql.o `test -f 'Database/DatabaseMysql.cpp' || echo '$(srcdir)/'`Database/DatabaseMysql.cpp

DatabaseMysql.obj: Database/DatabaseMysql.cpp
@AMDEP_TRUE@	source='Database/DatabaseMysql.cpp' object='DatabaseMysql.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DatabaseMysql.Po' tmpdepfile='$(DEPDIR)/DatabaseMysql.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DatabaseMysql.obj `cygpath -w Database/DatabaseMysql.cpp`

Base64.o: Network/Base64.cpp
@AMDEP_TRUE@	source='Network/Base64.cpp' object='Base64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Base64.Po' tmpdepfile='$(DEPDIR)/Base64.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Base64.o `test -f 'Network/Base64.cpp' || echo '$(srcdir)/'`Network/Base64.cpp

Base64.obj: Network/Base64.cpp
@AMDEP_TRUE@	source='Network/Base64.cpp' object='Base64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Base64.Po' tmpdepfile='$(DEPDIR)/Base64.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Base64.obj `cygpath -w Network/Base64.cpp`

CircularBuffer.o: Network/CircularBuffer.cpp
@AMDEP_TRUE@	source='Network/CircularBuffer.cpp' object='CircularBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CircularBuffer.Po' tmpdepfile='$(DEPDIR)/CircularBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CircularBuffer.o `test -f 'Network/CircularBuffer.cpp' || echo '$(srcdir)/'`Network/CircularBuffer.cpp

CircularBuffer.obj: Network/CircularBuffer.cpp
@AMDEP_TRUE@	source='Network/CircularBuffer.cpp' object='CircularBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CircularBuffer.Po' tmpdepfile='$(DEPDIR)/CircularBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CircularBuffer.obj `cygpath -w Network/CircularBuffer.cpp`

Parse.o: Network/Parse.cpp
@AMDEP_TRUE@	source='Network/Parse.cpp' object='Parse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Parse.Po' tmpdepfile='$(DEPDIR)/Parse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parse.o `test -f 'Network/Parse.cpp' || echo '$(srcdir)/'`Network/Parse.cpp

Parse.obj: Network/Parse.cpp
@AMDEP_TRUE@	source='Network/Parse.cpp' object='Parse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Parse.Po' tmpdepfile='$(DEPDIR)/Parse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Parse.obj `cygpath -w Network/Parse.cpp`

PoolSocket.o: Network/PoolSocket.cpp
@AMDEP_TRUE@	source='Network/PoolSocket.cpp' object='PoolSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PoolSocket.Po' tmpdepfile='$(DEPDIR)/PoolSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PoolSocket.o `test -f 'Network/PoolSocket.cpp' || echo '$(srcdir)/'`Network/PoolSocket.cpp

PoolSocket.obj: Network/PoolSocket.cpp
@AMDEP_TRUE@	source='Network/PoolSocket.cpp' object='PoolSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PoolSocket.Po' tmpdepfile='$(DEPDIR)/PoolSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PoolSocket.obj `cygpath -w Network/PoolSocket.cpp`

ResolvServer.o: Network/ResolvServer.cpp
@AMDEP_TRUE@	source='Network/ResolvServer.cpp' object='ResolvServer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ResolvServer.Po' tmpdepfile='$(DEPDIR)/ResolvServer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ResolvServer.o `test -f 'Network/ResolvServer.cpp' || echo '$(srcdir)/'`Network/ResolvServer.cpp

ResolvServer.obj: Network/ResolvServer.cpp
@AMDEP_TRUE@	source='Network/ResolvServer.cpp' object='ResolvServer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ResolvServer.Po' tmpdepfile='$(DEPDIR)/ResolvServer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ResolvServer.obj `cygpath -w Network/ResolvServer.cpp`

ResolvSocket.o: Network/ResolvSocket.cpp
@AMDEP_TRUE@	source='Network/ResolvSocket.cpp' object='ResolvSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ResolvSocket.Po' tmpdepfile='$(DEPDIR)/ResolvSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ResolvSocket.o `test -f 'Network/ResolvSocket.cpp' || echo '$(srcdir)/'`Network/ResolvSocket.cpp

ResolvSocket.obj: Network/ResolvSocket.cpp
@AMDEP_TRUE@	source='Network/ResolvSocket.cpp' object='ResolvSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ResolvSocket.Po' tmpdepfile='$(DEPDIR)/ResolvSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ResolvSocket.obj `cygpath -w Network/ResolvSocket.cpp`

Socket.o: Network/Socket.cpp
@AMDEP_TRUE@	source='Network/Socket.cpp' object='Socket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Socket.Po' tmpdepfile='$(DEPDIR)/Socket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Socket.o `test -f 'Network/Socket.cpp' || echo '$(srcdir)/'`Network/Socket.cpp

Socket.obj: Network/Socket.cpp
@AMDEP_TRUE@	source='Network/Socket.cpp' object='Socket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Socket.Po' tmpdepfile='$(DEPDIR)/Socket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Socket.obj `cygpath -w Network/Socket.cpp`

SocketHandler.o: Network/SocketHandler.cpp
@AMDEP_TRUE@	source='Network/SocketHandler.cpp' object='SocketHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SocketHandler.Po' tmpdepfile='$(DEPDIR)/SocketHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketHandler.o `test -f 'Network/SocketHandler.cpp' || echo '$(srcdir)/'`Network/SocketHandler.cpp

SocketHandler.obj: Network/SocketHandler.cpp
@AMDEP_TRUE@	source='Network/SocketHandler.cpp' object='SocketHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SocketHandler.Po' tmpdepfile='$(DEPDIR)/SocketHandler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketHandler.obj `cygpath -w Network/SocketHandler.cpp`

socket_include.o: Network/socket_include.cpp
@AMDEP_TRUE@	source='Network/socket_include.cpp' object='socket_include.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/socket_include.Po' tmpdepfile='$(DEPDIR)/socket_include.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o socket_include.o `test -f 'Network/socket_include.cpp' || echo '$(srcdir)/'`Network/socket_include.cpp

socket_include.obj: Network/socket_include.cpp
@AMDEP_TRUE@	source='Network/socket_include.cpp' object='socket_include.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/socket_include.Po' tmpdepfile='$(DEPDIR)/socket_include.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o socket_include.obj `cygpath -w Network/socket_include.cpp`

SocketThread.o: Network/SocketThread.cpp
@AMDEP_TRUE@	source='Network/SocketThread.cpp' object='SocketThread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SocketThread.Po' tmpdepfile='$(DEPDIR)/SocketThread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketThread.o `test -f 'Network/SocketThread.cpp' || echo '$(srcdir)/'`Network/SocketThread.cpp

SocketThread.obj: Network/SocketThread.cpp
@AMDEP_TRUE@	source='Network/SocketThread.cpp' object='SocketThread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SocketThread.Po' tmpdepfile='$(DEPDIR)/SocketThread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SocketThread.obj `cygpath -w Network/SocketThread.cpp`

StdoutLog.o: Network/StdoutLog.cpp
@AMDEP_TRUE@	source='Network/StdoutLog.cpp' object='StdoutLog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StdoutLog.Po' tmpdepfile='$(DEPDIR)/StdoutLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdoutLog.o `test -f 'Network/StdoutLog.cpp' || echo '$(srcdir)/'`Network/StdoutLog.cpp

StdoutLog.obj: Network/StdoutLog.cpp
@AMDEP_TRUE@	source='Network/StdoutLog.cpp' object='StdoutLog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StdoutLog.Po' tmpdepfile='$(DEPDIR)/StdoutLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdoutLog.obj `cygpath -w Network/StdoutLog.cpp`

TcpSocket.o: Network/TcpSocket.cpp
@AMDEP_TRUE@	source='Network/TcpSocket.cpp' object='TcpSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TcpSocket.Po' tmpdepfile='$(DEPDIR)/TcpSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TcpSocket.o `test -f 'Network/TcpSocket.cpp' || echo '$(srcdir)/'`Network/TcpSocket.cpp

TcpSocket.obj: Network/TcpSocket.cpp
@AMDEP_TRUE@	source='Network/TcpSocket.cpp' object='TcpSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TcpSocket.Po' tmpdepfile='$(DEPDIR)/TcpSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TcpSocket.obj `cygpath -w Network/TcpSocket.cpp`

Thread.o: Network/Thread.cpp
@AMDEP_TRUE@	source='Network/Thread.cpp' object='Thread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Thread.Po' tmpdepfile='$(DEPDIR)/Thread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thread.o `test -f 'Network/Thread.cpp' || echo '$(srcdir)/'`Network/Thread.cpp

Thread.obj: Network/Thread.cpp
@AMDEP_TRUE@	source='Network/Thread.cpp' object='Thread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Thread.Po' tmpdepfile='$(DEPDIR)/Thread.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Thread.obj `cygpath -w Network/Thread.cpp`

UdpSocket.o: Network/UdpSocket.cpp
@AMDEP_TRUE@	source='Network/UdpSocket.cpp' object='UdpSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/UdpSocket.Po' tmpdepfile='$(DEPDIR)/UdpSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UdpSocket.o `test -f 'Network/UdpSocket.cpp' || echo '$(srcdir)/'`Network/UdpSocket.cpp

UdpSocket.obj: Network/UdpSocket.cpp
@AMDEP_TRUE@	source='Network/UdpSocket.cpp' object='UdpSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/UdpSocket.Po' tmpdepfile='$(DEPDIR)/UdpSocket.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UdpSocket.obj `cygpath -w Network/UdpSocket.cpp`

Utility.o: Network/Utility.cpp
@AMDEP_TRUE@	source='Network/Utility.cpp' object='Utility.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Utility.Po' tmpdepfile='$(DEPDIR)/Utility.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utility.o `test -f 'Network/Utility.cpp' || echo '$(srcdir)/'`Network/Utility.cpp

Utility.obj: Network/Utility.cpp
@AMDEP_TRUE@	source='Network/Utility.cpp' object='Utility.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Utility.Po' tmpdepfile='$(DEPDIR)/Utility.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utility.obj `cygpath -w Network/Utility.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
